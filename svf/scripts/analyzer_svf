#!/bin/bash

NAME_T="$(cat $1 | grep 'Source: ' | cut -d ':' -f2)"
VERSION_T="$(cat $1 | grep 'Version: ' | cut -d ':' -f2)"
NAME="$(echo -e "${NAME_T}" | tr -d '[:space:]')"
VERSION="$(echo -e "${VERSION_T}" | tr -d '[:space:]')"
PKG="$NAME-$VERSION"
CALLGRAPH="$PKG.txt"
ERROR="$PKG.err"

cd $2
make clean
# Setup SVF
echo "deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-7 main" >> \
    /etc/apt/sources.list
echo "deb-src http://apt.llvm.org/stretch/ llvm-toolchain-stretch-7 main" >> \
    /etc/apt/sources.list
wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add -
apt -yqq update && apt -yqq upgrade
apt install -yqq llvm-7 clang-7
ln -s /usr/bin/clang-7 /usr/bin/clang
ln -s /usr/bin/llvm-link-7 /usr/bin/llvm-link
export LLVM_SRC=/usr/local/installations/llvm-7.0.0.src
export LLVM_OBJ=/usr/lib/llvm-7/build
export LLVM_DIR=/usr/lib/llvm-7/build
export SVF_HOME=/usr/local/installations/SVF/
export PATH=$SVF_HOME/Release-build/bin:$PATH
export LLVM_COMPILER=clang
# replace '=' and ':=' with '?=' in rules Makefile
sed -i -E "s/CC [:]?=/CC ?=/g" debian/rules
sed -i -E "s/CC[:]?=/CC?=/g" debian/rules
# find -maxdepth 1 -type f -executable -exec sh -c "file -i '{}' | grep -q 'x-executable; charset=binary'" \; -print
# run SVF on package
CC=/usr/local/bin/wllvm dpkg-buildpackage 2>error
# sed to chang CC := or = with ?=
STATUS=$?
BINARIES=$(find -maxdepth 1 -type f -executable -exec sh -c \
    "file -i '{}' | grep -q 'charset=binary'" \; -print)
# Check if there are binaries
if [ -z "$BINARIES" ] && [ $STATUS == 0 ]; then
    echo "$PKG: no binary files found" >> /callgraphs/report && \
    exit 0
elif [[ -f "error" ]] && [ $STATUS != 0 ]; then
    echo "$PKG: compilation failure" >> /callgraphs/report && \
        mv error /callgraphs/$ERROR && \
        exit 0
fi
for i in $BINARIES; do
    i=${i#./}
    # extract LLVM bitcode
    extract-bc $i 2> error
    STATUS=$?
    # Check if there are .bc files
    count=`ls -1 *.bc 2>/dev/null | wc -l`
    if [ $count == 0 ] && [ $STATUS == 0 ]; then
        echo "$PKG: $i no .bc files produced" >> /callgraphs/report && \
            if [[ -f "error" ]]; then
                mv error /callgraphs/$PKG.$i.ext.err
            fi
    elif [[ -f "error" ]] && [ $STATUS != 0 ] ; then
        echo "$PKG: $i extract-bc failed" >> /callgraphs/report && \
            mv error /callgraphs/$PKG.$i.ext.err
    fi
    # Run SVF analysis
    for j in *.bc; do
        wpa -fspta -dump-callgraph $j 2> error
        if [[ -f "callgraph_final.dot" ]]; then
            echo "$PKG: $i done" >> /callgraphs/report && \
                mv callgraph_final.dot /callgraphs/$PKG.$i.dot && \
                rm -f callgraph_initial.dot j
        elif [[ -f "error" ]] && [ $STATUS != 0 ]; then
            echo "$PKG: $i SVF failed" >> /callgraphs/report &&
                mv error /callgraphs/$PKG.$i.svf.err
        fi
        rm -f *.bc
    done
done
