#!/bin/bash

R_OPTION_PARAM="cgraph.txt?all=1"

# run CSsout on package
rm -rf /callgraph/*
mkdir -p /callgraph
mkdir -p /var/run/csmake-spy
cd $2


# Copy changelog
cp debian/changelog /callgraph/
# Copy dsc file
cp $1 /callgraph/


copy_files() {
    cp cgraph.txt /callgraph/
    if ls ../*.deb 1> /dev/null 2>&1; then
        cp ../*.deb /callgraph/
    fi
    if ls ../*.udeb 1> /dev/null 2>&1; then
        cp ../*.udeb /callgraph/
    fi
}

run_fcan() {
    # Install fcan dependencies
    pip3 install setuptools
    pip3 install pydpkg
    # Create file to filter out CScout nodes from canonical call graph
    echo "
    {
        \"CScout\": {
            \"forge\": \"\",
            \"constraints\": \"\",
            \"architecture\": \"\",
            \"regex\": [
                \"^/usr/local/include/cscout.*\"
            ],
            \"keep\": false
        }
    }
    " > custom_deps.json
    # Run fcan
    if fcan -c custom_deps.json /callgraph/ 2> /callgraph/fcan_error; then
        echo "done" > /callgraph/report
    else
        echo "failed-fcan" > /callgraph/report
        exit 1
    fi
}

run_cscout() {
    # Run CScout
    if cscout -R $R_OPTION_PARAM make.cs 2>cscout_error; then
        # Save warnings
        if [[ -f "cscout_error" ]]; then
            cp cscout_error /callgraph/cscout_warnings
        fi
        if [[ -f "cgraph.txt" && ! -s "cgraph.txt" ]]; then
            echo "failed-empty" > /callgraph/report
            exit 1
        else
            # Copy files
            copy_files
            # Run fcan
            run_fcan
        fi
    else
        cp cscout_error /callgraph/
        echo "failed-cscout" > /callgraph/report
        exit 1
    fi
}

run_csmake() {
    # Run csmake
    MAKE=/usr/local/bin/csmake dpkg-buildpackage -b 2> csmake_error
    # Check if make.cs was produced
    if [[ -f "make.cs" ]]; then
        # Save Warnings
        if [[ -f "csmake_error" ]]; then
            cp csmake_error /callgraph/csmake_warnings
        fi
        # Run CScout
        run_cscout
    else
        # Copy errors
        cp csmake_error /callgraph/
        # Log Status
        echo "failed-csmake" > /callgraph/report
        exit 1
    fi
}

run_csmake

rm -rf /var/run/csmake-spy
